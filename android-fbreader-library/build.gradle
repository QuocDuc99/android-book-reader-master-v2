buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:7.2.2'
    classpath 'digital.wup:android-maven-publish:3.6.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
    classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  google()
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
//apply plugin: 'signing'
apply plugin: 'digital.wup.android-maven-publish' // 'gradle publishToMavenLocal' and 'publish' tasks
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
android {
  compileSdkVersion 34
  //ndkVersion "16.1.4479499"
  namespace 'org.geometerplus.zlibrary'
  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 34
    versionCode 1
    versionName "0.1.18"
    consumerProguardFiles 'consumer-proguard-rules.pro'
//    ndk {
//      abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
//    }
    multiDexEnabled true
  }

  lintOptions {
    disable 'WrongViewCast'
    checkReleaseBuilds false
    abortOnError false
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
      consumerProguardFiles 'consumer-rules.pro'
    }
    debug {
      debuggable true
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  externalNativeBuild {
    ndkBuild {
      path 'src/main/jni/Android.mk'
    }
  }
  buildFeatures {
    dataBinding true
    viewBinding true
  }
  dataBinding{
    enabled true
  }
  kapt {
    generateStubs = true
  }
  compileOptions {
    sourceCompatibility  JavaVersion.VERSION_1_8            // << --- ADD This
    targetCompatibility  JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }
}
//compileOptions {
//  sourceCompatibility  JavaVersion.VERSION_1_8            // << --- ADD This
//  targetCompatibility  JavaVersion.VERSION_1_8
//}
// https://docs.gradle.org/current/userguide/publishing_maven.html

task javadoc(type: Javadoc) {
  failOnError = false // options.addStringOption('Xdoclint:none', '-quiet')
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

def prop(String name) {
  project.hasProperty(name) ? project.getProperty(name) : null
}
publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = 'com.github.QuocDuc99'
      artifactId = 'android-fbreader-library'
      //version = '2.0.2'
      version android.defaultConfig.versionName
      from components.findByName('release')
    }
  }
}
publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId 'com.github.QuocDuc99'
      artifactId 'android-fbreader-library'
      version android.defaultConfig.versionName

        from components.android
        artifact sourcesJar
        artifact javadocJar

      pom {
        description = 'First version release'
        //name = 'Android FBReader Library'
        /* description = 'First version release'
         url = 'https://github.com/QuocDuc99/android-book-reader-master'
         licenses {
             license {
                 name = 'GPLv2'
                 url = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt'
             }
         }
         developers {
             developer {
                 id = 'axet'
                 name = 'Alexey Kuznetsov'
                 email = 'axet@me.com'
             }
         }
         scm {
             connection = 'scm:git:' + pom.url.get()
             developerConnection = 'scm:git:' + pom.url.get()
             url = pom.url
         }*/
      }
    }
  }
  repositories {
    mavenLocal()
    maven {
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username prop('ossrhUsername')
        password prop('ossrhPassword')
      }
    }
  }
}
//publishing {
//  publications {
//    mavenJava(MavenPublication) {
//      groupId 'com.github.axet.fbreader'
//      artifactId 'library'
//      version android.defaultConfig.versionName
//
//      from components.android
//      artifact sourcesJar
//      artifact javadocJar
//
//      pom {
//        name = 'Android FBReader Library'
//        description = 'FBReader base classes.'
//        url = 'https://gitlab.com/axet/android-fbreader-library'
//        licenses {
//          license {
//            name = 'GPLv2'
//            url = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt'
//          }
//        }
//        developers {
//          developer {
//            id = 'axet'
//            name = 'Alexey Kuznetsov'
//            email = 'axet@me.com'
//          }
//        }
//        scm {
//          connection = 'scm:git:' + pom.url.get()
//          developerConnection = 'scm:git:' + pom.url.get()
//          url = pom.url
//        }
//      }
//    }
//  }
//  repositories {
//    maven {
//      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//      credentials {
//        username prop('ossrhUsername')
//        password prop('ossrhPassword')
//      }
//    }
//  }
//}

//signing {
//  sign publishing.publications.mavenJava
//}

dependencies {
  implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
  implementation 'com.android.support:support-v4:28.0.0'
  implementation "com.google.android.material:material:1.12.0"
  implementation 'com.android.support.constraint:constraint-layout:2.0.4'
  api 'com.github.axet.fbreader:ambilwarna:1.0' // compile project(':ambilWarna')
  //api 'com.github.axet.fbreader:androidfilechooser:5.0' // compile project(':androidFileChooser')
  api 'com.github.axet.fbreader:dragsortlistview:0.6.1' // compile project(':dragSortListview')
  api 'com.github.axet.fbreader:supertoasts:1.3.4' // compile project(':superToasts')
  api 'com.github.axet:pdfparse-lib:1.0'
  api('com.googlecode.json-simple:json-simple:1.1.1') { exclude group: 'junit' }
  api 'org.apache.httpcomponents:httpmime:4.5.6'
  api 'com.nanohttpd:nanohttpd:2.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
  //implementation 'com.github.axet.fbreader:util:0.0.5'
  testImplementation 'junit:junit:4.13.2'
  // implementation "com.google.android.material:material:1.4.0"
  implementation 'com.github.axet:android-library:1.35.21'
//   implementation project(':util')
  // implementation project(':android-library')
  implementation 'com.android.support:design:28.0.0'
  // implementation project(':android-fbreader-library')
  implementation 'com.android.support:support-vector-drawable:28.0.0'
  //  implementation 'com.android.support.constraint:constraint-layout:1.1.3'
  //  implementation ('com.github.axet.fbreader:library:0.1.18') { exclude group: 'org.apache.httpcomponents', module: 'httpclient' }
  implementation 'com.github.axet:djvulibre:0.1.4'
  implementation 'com.github.axet:pdfium:2.0.16'
  implementation 'com.github.axet:k2pdfopt:0.1.6'
  implementation('com.github.axet:wget:1.7.0') { exclude group: 'org.json', module: 'json' }
  implementation "android.arch.lifecycle:extensions:1.1.1"
  annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
  //    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
  //   implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
  implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
  implementation "androidx.lifecycle:lifecycle-viewmodel:2.8.7"

  implementation 'com.github.bumptech.glide:glide:4.16.0'
  implementation 'com.android.support:multidex:2.0.1'
  kapt 'com.android.databinding:compiler:3.1.4'

  implementation "android.arch.persistence.room:runtime:1.1.1"
  kapt "android.arch.persistence.room:compiler:1.1.1"
  kaptAndroidTest 'androidx.databinding:databinding-compiler:8.7.2'

//  testImplementation "org.junit.jupiter:junit-jupiter-engine:5.10.2"
//  testImplementation "io.mockk:mockk:1.13.10"
//  androidTestImplementation "org.assertj:assertj-core:3.25.3"
//  androidTestImplementation "androidx.test.espresso:espresso-intents:3.1.0-alpha4"
//  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0"
//  implementation "androidx.arch.core:core-testing:2.2.0"
//  implementation "androidx.test.espresso:espresso-idling-resource:3.5.1"
//  implementation "androidx.test.espresso:espresso-contrib:3.5.1"
}
kapt {
  correctErrorTypes true
}